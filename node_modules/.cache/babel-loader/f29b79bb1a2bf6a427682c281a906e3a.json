{"ast":null,"code":"var _jsxFileName = \"F:\\\\Engineering Village_Company\\\\Phonetics\\\\EV---Phonetics-Dashboard\\\\src\\\\components\\\\PhoneticsSamples.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport ExampleOfPhonetic from \"./ExampleOfPhonetic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PhoneticsSamples() {\n  _s();\n\n  const {\n    REACT_APP_HOST\n  } = process.env;\n  const {\n    phonetic_name\n  } = useParams();\n  console.log('phonetic_name', phonetic_name);\n  const [PhoneticsExamples, SetPhoneticsExamples] = useState([]);\n\n  const fetchData = async function () {\n    let phonetic_name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : phonetic_name;\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'i';\n    console.log('phonetic_name', phonetic_name, 'type', type);\n\n    try {\n      const {\n        data: response\n      } = await axios.get(`${REACT_APP_HOST}getPhoneticExamples.php?phonetic_name=${phonetic_name}&type=${type}`);\n      SetPhoneticsExamples(response);\n      console.log('PhoneticsExamples', response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const types = ['i', 'm', 'f'];\n\n  function checkType(type) {\n    if (type == 'i') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingRight: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (type == 'm') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingRight: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingLeft: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (type == 'f') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingLeft: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  const typeList = types.map((type, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginBottom: '5px'\n          },\n          onClick: () => fetchData(phonetic_name, type) // to={`/examples/${phonetic_name}${type}`}\n          ,\n          className: \"button-50\",\n          role: \"button\",\n          children: checkType(type)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)\n    }, void 0, false);\n  });\n  const PhoneticsExamplesList = PhoneticsExamples.map((example, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row column1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-50\",\n            role: \"button\",\n            children: example.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, example.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            className: \"Play\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: 'https://mysqltest955.000webhostapp.com' + example.voice,\n              ttype: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"midde_cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row column_title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_title\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Phonetics Samples for Letter \", phonetic_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row column1\",\n        children: typeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), PhoneticsExamplesList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhoneticsSamples, \"JByvFt49wLyzNMsiF/A3NSXCyME=\", false, function () {\n  return [useParams];\n});\n\n_c = PhoneticsSamples;\nexport default PhoneticsSamples;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneticsSamples\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useParams","ExampleOfPhonetic","PhoneticsSamples","REACT_APP_HOST","process","env","phonetic_name","console","log","PhoneticsExamples","SetPhoneticsExamples","fetchData","type","data","response","get","error","message","types","checkType","paddingRight","fontWeight","paddingLeft","typeList","map","i","marginBottom","PhoneticsExamplesList","example","word","id","voice"],"sources":["F:/Engineering Village_Company/Phonetics/EV---Phonetics-Dashboard/src/components/PhoneticsSamples.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExampleOfPhonetic from \"./ExampleOfPhonetic\";\r\n\r\nfunction PhoneticsSamples() {\r\n  const { REACT_APP_HOST } = process.env;\r\n  const { phonetic_name } = useParams();\r\n  console.log('phonetic_name',phonetic_name)\r\n  const [PhoneticsExamples, SetPhoneticsExamples] = useState([]);\r\n  const fetchData = async (phonetic_name=phonetic_name,type='i') => {\r\n    console.log('phonetic_name',phonetic_name,'type',type)\r\n    try {\r\n      const { data: response } = await axios.get(\r\n        `${REACT_APP_HOST}getPhoneticExamples.php?phonetic_name=${phonetic_name}&type=${type}`\r\n      );\r\n      SetPhoneticsExamples(response);\r\n      console.log('PhoneticsExamples',response);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const types = ['i', 'm', 'f'];\r\n  function checkType(type) {\r\n    if (type=='i'){\r\n        return (\r\n            <>\r\n            <span style={{paddingRight:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            <span>{phonetic_name}</span>\r\n            </>\r\n           \r\n        )\r\n    } \r\n    if (type=='m'){\r\n        return (\r\n            <>\r\n            <span style={{paddingRight:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            <span>{phonetic_name}</span>\r\n            <span style={{paddingLeft:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            </>\r\n        )\r\n    } \r\n    if (type=='f'){\r\n        return (\r\n            <>\r\n            <span>{phonetic_name}</span>\r\n            <span style={{paddingLeft:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            </>\r\n        )\r\n    } \r\n  }\r\n  const typeList = types.map((type, i) => {   \r\n    return(\r\n        <>\r\n         <div className=\"col-md-2\">\r\n            <button style={{marginBottom:'5px'}}\r\n                key={i}\r\n                onClick={()=> fetchData(phonetic_name,type)}\r\n                // to={`/examples/${phonetic_name}${type}`}\r\n                className=\"button-50\"\r\n                role=\"button\"\r\n            >\r\n             {checkType(type)}\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n  });\r\n  const PhoneticsExamplesList = PhoneticsExamples.map((example, i) => {\r\n    return (\r\n      <>\r\n       <div className=\"row column1\">\r\n        <div key={example.id} className=\"col-md-5\">\r\n            <div\r\n              className=\"button-50\"\r\n              role=\"button\"\r\n            >\r\n              {example.word}\r\n            </div>\r\n          </div>\r\n          <div key={i} className=\"col-md-5\">\r\n            <audio controls className=\"Play\">\r\n              <source src={'https://mysqltest955.000webhostapp.com'+example.voice}  ttype=\"audio/mp3\"></source>\r\n            </audio>\r\n           </div>\r\n       </div>\r\n        <div style={{marginBottom:'5px'}}></div>\r\n      </>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"midde_cont\">\r\n      <div className=\"container-fluid\">\r\n      <div className=\"row column_title\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"page_title\">\r\n            <h2>Phonetics Samples for Letter {phonetic_name}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n \r\n        <div className=\"row column1\">\r\n          {typeList}\r\n        </div>\r\n        {PhoneticsExamplesList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PhoneticsSamples;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}