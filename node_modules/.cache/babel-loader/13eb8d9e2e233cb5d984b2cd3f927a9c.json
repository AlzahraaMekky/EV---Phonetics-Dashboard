{"ast":null,"code":"var _jsxFileName = \"F:\\\\Engineering Village_Company\\\\Phonetics\\\\EV---Phonetics-Dashboard\\\\src\\\\components\\\\PhoneticsSamples.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport ExampleOfPhonetic from \"./ExampleOfPhonetic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PhoneticsSamples() {\n  _s();\n\n  const {\n    REACT_APP_HOST\n  } = process.env;\n  const {\n    phonetic_name\n  } = useParams();\n  const [Phonetics, SetPhonetics] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const {\n        data: response\n      } = await axios.get(`${REACT_APP_HOST}getPhoneticExamples.php?phonetic_name=${phonetic_name}&type=${type}`);\n      SetPhoneticsExamples(response);\n      console.log('PhoneticsExamples', response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const types = ['i', 'm', 'f'];\n\n  function checkType(type) {\n    if (type == 'i') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingRight: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (type == 'm') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingRight: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingLeft: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (type == 'f') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: phonetic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            paddingLeft: '5px',\n            fontWeight: 'bolder'\n          },\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  const typeList = types.map((type, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          to: `/examples/${phonetic_name}${type}`,\n          className: \"button-50\",\n          role: \"button\",\n          children: checkType(type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"midde_cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row column_title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_title\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Phonetics Samples for Letter \", phonetic_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row column1\",\n        children: typeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExampleOfPhonetic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhoneticsSamples, \"ktyr+DrHOpOfUc15L70AfzoUPXo=\", false, function () {\n  return [useParams];\n});\n\n_c = PhoneticsSamples;\nexport default PhoneticsSamples;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneticsSamples\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useParams","ExampleOfPhonetic","PhoneticsSamples","REACT_APP_HOST","process","env","phonetic_name","Phonetics","SetPhonetics","fetchData","data","response","get","type","SetPhoneticsExamples","console","log","error","message","types","checkType","paddingRight","fontWeight","paddingLeft","typeList","map","i"],"sources":["F:/Engineering Village_Company/Phonetics/EV---Phonetics-Dashboard/src/components/PhoneticsSamples.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExampleOfPhonetic from \"./ExampleOfPhonetic\";\r\n\r\nfunction PhoneticsSamples() {\r\n  const { REACT_APP_HOST } = process.env;\r\n  const { phonetic_name } = useParams();\r\n  const [Phonetics, SetPhonetics] = useState([]);\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data: response } = await axios.get(\r\n        `${REACT_APP_HOST}getPhoneticExamples.php?phonetic_name=${phonetic_name}&type=${type}`\r\n      );\r\n      SetPhoneticsExamples(response);\r\n      console.log('PhoneticsExamples',response);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const types = ['i', 'm', 'f'];\r\n  function checkType(type) {\r\n    if (type=='i'){\r\n        return (\r\n            <>\r\n            <span style={{paddingRight:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            <span>{phonetic_name}</span>\r\n            </>\r\n           \r\n        )\r\n    } \r\n    if (type=='m'){\r\n        return (\r\n            <>\r\n            <span style={{paddingRight:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            <span>{phonetic_name}</span>\r\n            <span style={{paddingLeft:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            </>\r\n        )\r\n    } \r\n    if (type=='f'){\r\n        return (\r\n            <>\r\n            <span>{phonetic_name}</span>\r\n            <span style={{paddingLeft:'5px',fontWeight:'bolder'}}>&#8212;</span>\r\n            </>\r\n        )\r\n    } \r\n  }\r\n  const typeList = types.map((type, i) => {   \r\n    return(\r\n        <>\r\n         <div className=\"col-md-2\">\r\n            <button\r\n                to={`/examples/${phonetic_name}${type}`}\r\n                className=\"button-50\"\r\n                role=\"button\"\r\n            >\r\n             {checkType(type)}\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n  });\r\n  return (\r\n    <div className=\"midde_cont\">\r\n      <div className=\"container-fluid\">\r\n      <div className=\"row column_title\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"page_title\">\r\n            <h2>Phonetics Samples for Letter {phonetic_name}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n \r\n        <div className=\"row column1\">\r\n          {typeList}\r\n        </div>\r\n        <ExampleOfPhonetic/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PhoneticsSamples;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}